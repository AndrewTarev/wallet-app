// Code generated by MockGen. DO NOT EDIT.
// Source: internal/app/services/service.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"
	domain "wallet-app/internal/app/domain"

	gomock "github.com/golang/mock/gomock"
	uuid "github.com/google/uuid"
	decimal "github.com/shopspring/decimal"
)

// MockWallet is a mock of Wallet interface.
type MockWallet struct {
	ctrl     *gomock.Controller
	recorder *MockWalletMockRecorder
}

// MockWalletMockRecorder is the mock recorder for MockWallet.
type MockWalletMockRecorder struct {
	mock *MockWallet
}

// NewMockWallet creates a new mock instance.
func NewMockWallet(ctrl *gomock.Controller) *MockWallet {
	mock := &MockWallet{ctrl: ctrl}
	mock.recorder = &MockWalletMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockWallet) EXPECT() *MockWalletMockRecorder {
	return m.recorder
}

// CreateWallet mocks base method.
func (m *MockWallet) CreateWallet(ctx context.Context) (domain.Wallet, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateWallet", ctx)
	ret0, _ := ret[0].(domain.Wallet)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateWallet indicates an expected call of CreateWallet.
func (mr *MockWalletMockRecorder) CreateWallet(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateWallet", reflect.TypeOf((*MockWallet)(nil).CreateWallet), ctx)
}

// GetBalance mocks base method.
func (m *MockWallet) GetBalance(ctx context.Context, walletID uuid.UUID) (decimal.Decimal, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetBalance", ctx, walletID)
	ret0, _ := ret[0].(decimal.Decimal)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetBalance indicates an expected call of GetBalance.
func (mr *MockWalletMockRecorder) GetBalance(ctx, walletID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBalance", reflect.TypeOf((*MockWallet)(nil).GetBalance), ctx, walletID)
}

// ProcessOperation mocks base method.
func (m *MockWallet) ProcessOperation(ctx context.Context, op domain.WalletOperation) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ProcessOperation", ctx, op)
	ret0, _ := ret[0].(error)
	return ret0
}

// ProcessOperation indicates an expected call of ProcessOperation.
func (mr *MockWalletMockRecorder) ProcessOperation(ctx, op interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ProcessOperation", reflect.TypeOf((*MockWallet)(nil).ProcessOperation), ctx, op)
}
